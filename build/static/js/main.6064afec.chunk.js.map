{"version":3,"sources":["firebase.js","StateProvider.js","time.js","components/Chat.js","reducer.js","components/Login.js","components/SidebarChat.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","formatDate","date","dateType","hours","getHours","minutes","getMinutes","ampm","strTime","getMonth","getDate","getFullYear","Chat","useState","seed","setSeed","input","setInput","roomName","setRoomName","messages","setMessages","user","roomId","useParams","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","slotInDate","Date","length","timestamp","toDate","console","log","className","Avatar","src","message","IconButton","SearchOutlined","AttachFile","MoreVert","displayName","InsertEmoticon","onChange","e","target","type","placeholder","onClick","preventDefault","add","FieldValue","serverTimestamp","Mic","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","err","alert","SidebarChat","id","addNewChat","Math","random","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","DonutLarge","room","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6XAeMA,EAFcC,IAASC,cAXN,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKMC,YACjBC,EAAOX,IAASW,OAChBC,EAAW,IAAIZ,IAASW,KAAKE,mBAGpBd,IClBFe,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,cAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,GAAlD,SACGC,KAIQI,EAAgB,kBAAMC,qBAAWV,I,MCa/BW,MAvBf,SAAoBC,EAAMC,GACxB,IAAIC,EAAQF,EAAKG,WACbC,EAAUJ,EAAKK,aACfC,EAAOJ,GAAS,GAAK,KAAO,KAI5BK,GAFJL,GADAA,GAAgB,KACQ,IAEF,KADtBE,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GACH,IAAME,EAE5C,MAAiB,cAAbL,EAEAM,EACA,KACCP,EAAKQ,WAAa,GACnB,IACAR,EAAKS,UACL,IACAT,EAAKU,cAGAH,GC8FII,MAlGf,WAAiB,IAAD,QACUC,mBAAS,IADnB,mBACPC,EADO,KACDC,EADC,OAEQF,mBAAS,IAFjB,mBAEXG,EAFW,KAEJC,EAFI,OAGcJ,mBAAS,IAHvB,mBAGXK,EAHW,KAGDC,EAHC,OAIcN,mBAAS,IAJvB,mBAIXO,EAJW,KAIDC,EAJC,OAKWvB,IALX,mBAKTwB,EALS,KAKTA,KACDC,GANU,KAMCC,cAAXD,QAYJE,qBAAU,WACRV,EAAQQ,GAERA,GACEjD,EACGoD,WAAW,SACXC,IAAIJ,GACJK,YAAW,SAACC,GAAD,OAAcV,EAAYU,EAASC,OAAOC,UACxDzD,EACGoD,WAAW,SACXC,IAAIJ,GACJG,WAAW,YACXM,QAAQ,YAAa,OACrBJ,YAAW,SAACC,GAAD,OACVR,EAAYQ,EAASI,KAAKC,KAAI,SAACP,GAAD,OAASA,EAAIG,gBAEhD,CAACP,IAEJ,IAAMY,EAAa,IAAIC,KAAJ,UACjBhB,EAASA,EAASiB,OAAS,UADV,iBACjB,EAA+BC,iBADd,aACjB,EAA0CC,UAG5C,OADAC,QAAQC,IAAIN,GAEV,sBAAKO,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAACC,EAAA,EAAD,CAAQC,IAAG,iDAA4C9B,EAA5C,UACX,sBAAK4B,UAAU,mBAAf,UACE,6BAAKxB,IACL,6BACG,UAAAE,EAAS,UAAT,eAAayB,SAAb,oBACgB7C,EAAWmC,EAAY,cACpC,eAGR,sBAAKO,UAAU,oBAAf,UACE,cAACI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACD,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,MAEF,cAACF,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,YAIN,qBAAKP,UAAU,aAAf,SACGtB,EAASc,KAAI,SAACW,GAAD,OACZ,oBACEH,UAAS,wBACPG,EAAQd,OAAST,EAAK4B,aAAe,kBAFzC,UAKE,sBAAMR,UAAU,aAAhB,SAA8BG,EAAQd,OALxC,IAKsDc,EAAQA,QAC5D,sBAAMH,UAAU,kBAAhB,SACG1C,EAAWmC,EAAY,uBAKhC,sBAAKO,UAAU,eAAf,UACE,cAACS,EAAA,EAAD,IACA,iCACE,uBACEvD,MAAOoB,EACPoC,SAAU,SAACC,GAAD,OAAOpC,EAASoC,EAAEC,OAAO1D,QACnC2D,KAAK,OACLC,YAAY,sBAEd,wBAAQC,QAhFA,SAACJ,GACfA,EAAEK,iBACFlB,QAAQC,IAAI,iBAAkBzB,GAC9B1C,EAAGoD,WAAW,SAASC,IAAIJ,GAAQG,WAAW,YAAYiC,IAAI,CAC5Dd,QAAS7B,EACTe,KAAMT,EAAK4B,YACXZ,UAAW/D,IAASU,UAAU2E,WAAWC,oBAE3C5C,EAAS,KAwEuBsC,KAAK,SAA/B,+BAKF,cAACO,EAAA,EAAD,W,gBCxGKC,EACD,WAgBGvE,EAbC,SAACwE,EAAOC,GAEtB,OADAzB,QAAQC,IAAIwB,GACJA,EAAOV,MACb,KAAKQ,EACH,OAAO,2BACFC,GADL,IAEE1C,KAAM2C,EAAO3C,OAEjB,QACE,OAAO0C,I,MCiBEE,MA3Bf,WAAkB,IAAD,EACcpE,IADd,mBACEqE,GADF,KACN7C,KADM,MAWf,OACE,qBAAKoB,UAAU,QAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBACEE,IAAI,iGACJwB,IAAI,KAEN,qBAAK1B,UAAU,cAAf,SACE,uDAEF,cAAC2B,EAAA,EAAD,CAAQZ,QAnBC,WACbvE,EACGoF,gBAAgBnF,GAChBoF,MAAK,SAACC,GACLhC,QAAQC,IAAI+B,GACZL,EAAS,CAAEZ,KAAMQ,EAAsBzC,KAAMkD,EAAOlD,UAErDmD,OAAM,SAACC,GAAD,OAASC,MAAMD,EAAI7B,aAYxB,uC,4BCgCO+B,MArDf,YAAgD,IAAD,QAAxBC,EAAwB,EAAxBA,GAAI9C,EAAoB,EAApBA,KAAM+C,EAAc,EAAdA,WAAc,EACrBjE,mBAAS,IADY,mBACtCC,EADsC,KAChCC,EADgC,OAEbF,mBAAS,IAFI,mBAEtCO,EAFsC,KAE5BC,EAF4B,KAU7CI,qBAAU,WACJoD,GACFvG,EAAGoD,WAAW,SACXC,IAAIkD,GACJnD,WAAW,YACXM,QAAQ,YAAa,QACrBJ,YAAW,SAACC,GAAD,OACVR,EAAYQ,EAASI,KAAKC,KAAI,SAACP,GAAD,OAASA,EAAIG,gBAGhD,CAAC+C,IACJpD,qBAAU,WACRV,EAAyB,IAAhBgE,KAAKC,SAAmB,KAChC,IAEH,IAAM7C,EAAa,IAAIC,KAAJ,UACjBhB,EAASA,EAASiB,OAAS,UADV,iBACjB,EAA+BC,iBADd,aACjB,EAA0CC,UAG5C,OAAQuC,EAkBN,qBAAKrB,QA5CY,WACjB,IAAMvC,EAAW+D,OAAO,8BACxB/D,GACE5C,EAAGoD,WAAW,SAASiC,IAAI,CACzB5B,KAAMb,KAwCgBwB,UAAU,cAApC,SACE,gDAlBF,cAAC,IAAD,CAAMwC,GAAE,iBAAYL,GAApB,SACE,sBAAKnC,UAAU,cAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,cAACC,EAAA,EAAD,CAAQC,IAAG,iDAA4C9B,EAA5C,UACX,sBAAK4B,UAAU,oBAAf,UACE,6BAAKX,IACL,sCAAIX,EAAS,UAAb,aAAI,EAAayB,gBAGrB,sBAAMH,UAAU,yBAAhB,UACG,UAAAtB,EAAS,UAAT,eAAayB,SACV7C,EAAWmC,EAAY,aACvB,kBCMCgD,MAhDf,WAAoB,IAAD,EACStE,mBAAS,IADlB,mBACVuE,EADU,KACHC,EADG,OAEYvF,IAFZ,mBAERwB,EAFQ,KAERA,KAcT,OAhBiB,KAIjBG,qBAAU,WACR,IAAM6D,EAAchH,EAAGoD,WAAW,SAASE,YAAW,SAACC,GAAD,OACpDwD,EACExD,EAASI,KAAKC,KAAI,SAACP,GAAD,MAAU,CAC1BkD,GAAIlD,EAAIkD,GACR/C,KAAMH,EAAIG,eAIhB,OAAO,kBAAMwD,OACZ,IAGD,sBAAK5C,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAACC,EAAA,EAAD,CAAQC,IAAG,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAMiE,WACnB,sBAAK7C,UAAU,uBAAf,UACE,cAACI,EAAA,EAAD,UACE,cAAC0C,EAAA,EAAD,MAEF,cAAC1C,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,YAIN,qBAAKP,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,cAACK,EAAA,EAAD,IACA,uBAAOQ,KAAK,OAAOC,YAAY,kCAGnC,sBAAKd,UAAU,iBAAf,UACE,cAAC,EAAD,CAAaoC,YAAU,IACtBM,EAAMlD,KAAI,SAACuD,GAAD,OACT,cAAC,EAAD,CAA2BZ,GAAIY,EAAKZ,GAAI9C,KAAM0D,EAAK3D,KAAKC,MAAtC0D,EAAKZ,cChBlBa,MAzBf,WAAgB,IAAD,EACgB5F,IADhB,mBACJwB,EADI,KACJA,KACT,OAFa,KAGX,qBAAKoB,UAAU,MAAf,SACIpB,EAGA,qBAAKoB,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,iBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cAVR,cAAC,EAAD,OCAOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAe7G,aNVS,CAC1B6B,KAAM,MMSuC9B,QAASA,EAApD,SACE,cAAC,EAAD,QAGJ+G,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6064afec.chunk.js","sourcesContent":["import firebase from \"firebase\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBE6xImb9MKxVEKQserZnGUlLTIExAljEs\",\n  authDomain: \"whatsapp-8136c.firebaseapp.com\",\n  databaseURL: \"https://whatsapp-8136c.firebaseio.com\",\n  projectId: \"whatsapp-8136c\",\n  storageBucket: \"whatsapp-8136c.appspot.com\",\n  messagingSenderId: \"432572739628\",\n  appId: \"1:432572739628:web:3bb2f05ce8a1ccd02d2189\",\n  measurementId: \"G-DQ0G6CSLL9\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","function formatDate(date, dateType) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var strTime = hours + \":\" + minutes + \" \" + ampm;\n\n  if (dateType === \"time&date\") {\n    return (\n      strTime +\n      \" \" +\n      (date.getMonth() + 1) +\n      \"/\" +\n      date.getDate() +\n      \"/\" +\n      date.getFullYear()\n    );\n  } else {\n    return strTime;\n  }\n}\nexport default formatDate;\n","import { Avatar, IconButton } from \"@material-ui/core\";\nimport {\n  AttachFile,\n  InsertEmoticon,\n  Mic,\n  MoreVert,\n  SearchOutlined,\n} from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport { useStateValue } from \"../StateProvider\";\nimport \"./Chat.css\";\nimport firebase from \"firebase\";\nimport formatDate from \"../time\";\n\nfunction Chat() {\n  const [seed, setSeed] = useState(\"\"),\n    [input, setInput] = useState(\"\"),\n    [roomName, setRoomName] = useState(\"\"),\n    [messages, setMessages] = useState([]),\n    [{ user }, dispatch] = useStateValue(),\n    { roomId } = useParams();\n  const sendMsg = (e) => {\n    e.preventDefault();\n    console.log(\"You typed >>> \", input);\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  useEffect(() => {\n    setSeed(roomId);\n\n    roomId &&\n      db\n        .collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name)) &&\n      db\n        .collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n  }, [roomId]);\n\n  const slotInDate = new Date(\n    messages[messages.length - 1]?.timestamp?.toDate()\n  );\n  console.log(slotInDate);\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n        <div className=\"chat__headerInfo\">\n          <h3>{roomName}</h3>\n          <p>\n            {messages[0]?.message\n              ? `Last seen ${formatDate(slotInDate, \"time&date\")}`\n              : \"Offline\"}\n          </p>\n        </div>\n        <div className=\"chat__headerRight\">\n          <IconButton>\n            <SearchOutlined />\n          </IconButton>\n          <IconButton>\n            <AttachFile />\n          </IconButton>\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"chat__body\">\n        {messages.map((message) => (\n          <p\n            className={`chat__message ${\n              message.name === user.displayName && \"chat__receiver\"\n            }`}\n          >\n            <span className=\"chat__name\">{message.name}</span> {message.message}\n            <span className=\"chat__timestamp\">\n              {formatDate(slotInDate, \"just time\")}\n            </span>\n          </p>\n        ))}\n      </div>\n      <div className=\"chat__footer\">\n        <InsertEmoticon />\n        <form>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            type=\"text\"\n            placeholder=\"Type a message...\"\n          />\n          <button onClick={sendMsg} type=\"submit\">\n            Send a message\n          </button>\n        </form>\n\n        <Mic />\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","export const initialState = {\n  user: null,\n};\n\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { auth, provider } from \"../firebase\";\nimport { actionTypes } from \"../reducer\";\nimport { useStateValue } from \"../StateProvider\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const [{ user }, dispatch] = useStateValue();\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        console.log(result);\n        dispatch({ type: actionTypes.SET_USER, user: result.user });\n      })\n      .catch((err) => alert(err.message));\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/1021px-WhatsApp.svg.png\"\n          alt=\"\"\n        />\n        <div className=\"login__text\">\n          <h1>Sign in to WhatsApp</h1>\n        </div>\n        <Button onClick={signIn}>Sign In with Google</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport \"./SidebarChat.css\";\nimport formatDate from \"../time\";\n\nfunction SidebarChat({ id, name, addNewChat }) {\n  const [seed, setSeed] = useState(\"\");\n  const [messages, setMessages] = useState(\"\");\n  const createChat = () => {\n    const roomName = prompt(\"Please enter name for chat\");\n    roomName &&\n      db.collection(\"rooms\").add({\n        name: roomName,\n      });\n  };\n  useEffect(() => {\n    if (id) {\n      db.collection(\"rooms\")\n        .doc(id)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n  }, [id]);\n  useEffect(() => {\n    setSeed((Math.random() * 5000) | 0);\n  }, []);\n\n  const slotInDate = new Date(\n    messages[messages.length - 1]?.timestamp?.toDate()\n  );\n\n  return !addNewChat ? (\n    <Link to={`/rooms/${id}`}>\n      <div className=\"sidebarChat\">\n        <div className=\"sidebarChat__avatar\">\n          <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n          <div className=\"sidebarChat__info\">\n            <h2>{name}</h2>\n            <p>{messages[0]?.message}</p>\n          </div>\n        </div>\n        <span className=\"sidebarChat__timestamp\">\n          {messages[0]?.message\n            ? formatDate(slotInDate, \"just time\")\n            : \"Offline\"}\n        </span>\n      </div>\n    </Link>\n  ) : (\n    <div onClick={createChat} className=\"sidebarChat\">\n      <h2>Add new chat</h2>\n    </div>\n  );\n}\n\nexport default SidebarChat;\n","import { Avatar, IconButton } from \"@material-ui/core\";\nimport { Chat, DonutLarge, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport db from \"../firebase\";\nimport { useStateValue } from \"../StateProvider\";\nimport \"./Sidebar.css\";\nimport SidebarChat from \"./SidebarChat\";\nfunction Sidebar() {\n  const [rooms, setRooms] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\n      setRooms(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      )\n    );\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar src={user?.photoURL} />\n        <div className=\"sidebar__headerRight\">\n          <IconButton>\n            <DonutLarge />\n          </IconButton>\n          <IconButton>\n            <Chat />\n          </IconButton>\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar__search\">\n        <div className=\"sidebar__searchContainer\">\n          <SearchOutlined />\n          <input type=\"text\" placeholder=\"Search or start new chat\" />\n        </div>\n      </div>\n      <div className=\"sidebar__chats\">\n        <SidebarChat addNewChat />\n        {rooms.map((room) => (\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport Login from \"./components/Login\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}