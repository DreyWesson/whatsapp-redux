{"version":3,"sources":["reportWebVitals.js","firebase.js","time.js","components/Chat.js","actions/actionTypes.js","components/Login.js","actions/userActions.js","components/SidebarChat.js","components/Sidebar.js","App.js","reducers/messageReducer.js","reducers/userReducer.js","reducers/rootReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","formatDate","strTime","day","date","Date","formatType","hours","getHours","minutes","getMinutes","weekDay","monthName","ampm","getDay","month","getMonth","isToday","getDate","getFullYear","timeSince","seconds","Math","floor","interval","Chat","useState","seed","setSeed","input","setInput","roomName","setRoomName","messages","setMessages","roomId","useParams","useSelector","userReducer","messageReducer","user","message","console","log","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","slotInDate","length","timestamp","toDate","className","Avatar","src","IconButton","SearchOutlined","AttachFile","MoreVert","displayName","InsertEmoticon","value","onChange","e","target","type","placeholder","onClick","preventDefault","add","FieldValue","serverTimestamp","Mic","actionTypes","Login","dispatch","useDispatch","alt","Button","signInWithPopup","result","getState","setUser","catch","err","alert","SidebarChat","id","addNewChat","random","prompt","to","Sidebar","rooms","setRooms","state","unsubscribe","photoURL","DonutLarge","room","App","path","initialState","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.624401e5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import firebase from \"firebase\";\nimport firebase from \"firebase/app\";\n// import \"firebase/firestore\";\n// import \"firebase/auth\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBE6xImb9MKxVEKQserZnGUlLTIExAljEs\",\n  authDomain: \"whatsapp-8136c.firebaseapp.com\",\n  databaseURL: \"https://whatsapp-8136c.firebaseio.com\",\n  projectId: \"whatsapp-8136c\",\n  storageBucket: \"whatsapp-8136c.appspot.com\",\n  messagingSenderId: \"432572739628\",\n  appId: \"1:432572739628:web:3bb2f05ce8a1ccd02d2189\",\n  measurementId: \"G-DQ0G6CSLL9\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","function formatDate(date = new Date(), formatType = \"timeSince\") {\n  let hours = date.getHours(),\n    minutes = date.getMinutes(),\n    weekDay = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    monthName = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    ampm = hours >= 12 ? \"pm\" : \"am\",\n    strTime,\n    day;\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  strTime = hours + \":\" + minutes + ampm;\n  day = weekDay[date.getDay()];\n  let month = monthName[date.getMonth()];\n\n  // if the date is TODAY display only time else display DAY,DATE\n  let isToday = () => {\n    switch (formatType) {\n      case \"time&date\":\n        // 6:28 pm 14 Nov, 2020\n        return `${strTime} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      case \"time&day&date\":\n        // 6:28 pm Sat 14 Nov, 2020\n        return `${strTime} ${day} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n      case \"isToday\":\n        // 6:28 pm • Today\n        return `${strTime} • Today`;\n      case \"checkIfToday\":\n        return `${date.getDate()}•${month}•${date.getFullYear()}`;\n\n      case \"longTime\":\n        // Sat 14 Nov, 2020\n        return `${day} ${date.getDate()} ${month}, ${date.getFullYear()}`;\n\n      default:\n        // 20mins ago\n        return timeSince(date);\n    }\n  };\n\n  function timeSince(date) {\n    let seconds = Math.floor((new Date() - date) / 1000),\n      interval = seconds / 31536000;\n\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" years ago\"\n        : Math.floor(interval) + \" year ago\";\n    }\n    interval = seconds / 2592000;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" months ago\"\n        : Math.floor(interval) + \" month ago\";\n    }\n    interval = seconds / 86400;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" days ago\"\n        : Math.floor(interval) + \" day ago\";\n    }\n    interval = seconds / 3600;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" hours ago\"\n        : Math.floor(interval) + \" hour ago\";\n    }\n    interval = seconds / 60;\n    if (interval >= 1) {\n      return Math.floor(interval) > 1\n        ? Math.floor(interval) + \" minutes ago\"\n        : Math.floor(interval) + \" minute ago\";\n    }\n    return Math.floor(interval) > 1\n      ? Math.floor(seconds) + \" seconds ago\"\n      : Math.floor(seconds) + \" second ago\";\n  }\n\n  return isToday();\n}\n\nexport default formatDate;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport {\n  AttachFile,\n  InsertEmoticon,\n  Mic,\n  MoreVert,\n  SearchOutlined,\n} from \"@material-ui/icons\";\nimport db from \"../firebase\";\nimport \"./Chat.css\";\nimport formatDate from \"../time\";\n\nfunction Chat() {\n  const [seed, setSeed] = useState(\"\"),\n    [input, setInput] = useState(\"\"),\n    [roomName, setRoomName] = useState(\"\"),\n    [messages, setMessages] = useState([]),\n    { roomId } = useParams();\n\n  // Destructure all the reducers from state\n  const { user, message } = useSelector(({ userReducer, messageReducer }) => {\n    return { user: userReducer.user, message: messageReducer.message };\n  });\n  console.log(\"messages 🕊\", message);\n  console.log(\"user 👨 \", user);\n\n  const sendMsg = (e) => {\n    e.preventDefault();\n    console.log(\"You typed >>> \", input);\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  useEffect(() => {\n    setSeed(roomId);\n    roomId &&\n      db\n        .collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name)) &&\n      db\n        .collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n  }, [roomId]);\n\n  const slotInDate = new Date(\n    messages[messages.length - 1]?.timestamp?.toDate()\n  );\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n        <div className=\"chat__headerInfo\">\n          <h3>{roomName}</h3>\n          <p>\n            {messages[0]?.message\n              ? `Last seen ${formatDate(slotInDate, \"time&date\")}`\n              : \"Offline\"}\n          </p>\n        </div>\n        <div className=\"chat__headerRight\">\n          <IconButton>\n            <SearchOutlined />\n          </IconButton>\n          <IconButton>\n            <AttachFile />\n          </IconButton>\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"chat__body\">\n        {messages.map((message) => (\n          <p\n            className={`chat__message ${\n              message.name === user.displayName && \"chat__receiver\"\n            }`}\n          >\n            <span className=\"chat__name\">{message.name}</span> {message.message}\n            <span className=\"chat__timestamp\">{formatDate(slotInDate)}</span>\n          </p>\n        ))}\n      </div>\n      <div className=\"chat__footer\">\n        <InsertEmoticon />\n        <form>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            type=\"text\"\n            placeholder=\"Type a message...\"\n          />\n          <button onClick={sendMsg} type=\"submit\">\n            Send a message\n          </button>\n        </form>\n\n        <Mic />\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","export const actionTypes = {\n  SET_USER: \"SET_USER\",\n  SET_MSG: \"SET_MSG\",\n};\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../actions/userActions\";\nimport { auth, provider } from \"../firebase\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => dispatch(setUser(result)))\n      .catch((err) => alert(err.message));\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/1021px-WhatsApp.svg.png\"\n          alt=\"\"\n        />\n        <div className=\"login__text\">\n          <h1>Sign in to WhatsApp</h1>\n        </div>\n        <Button onClick={signIn}>Sign In with Google</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { actionTypes } from \"./actionTypes\";\n// import { actionTypes } from \"../reducers/userReducer\";\n\n// export const setUser = (result) => {\n//   return { type: actionTypes.SET_USER, user: result.user };\n// };\n\nexport const setUser = (result) => {\n  return (dispatch, getState) =>\n    dispatch({ type: actionTypes.SET_USER, user: result.user });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./SidebarChat.css\";\nimport formatDate from \"../time\";\n\nfunction SidebarChat({ id, name, addNewChat }) {\n  const [seed, setSeed] = useState(\"\");\n  const [messages, setMessages] = useState(\"\");\n  const createChat = () => {\n    const roomName = prompt(\"Please enter name for chat\");\n    roomName &&\n      db.collection(\"rooms\").add({\n        name: roomName,\n      });\n  };\n  useEffect(() => {\n    if (id) {\n      db.collection(\"rooms\")\n        .doc(id)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n  }, [id]);\n  useEffect(() => {\n    setSeed((Math.random() * 5000) | 0);\n  }, []);\n\n  const slotInDate = new Date(\n    messages[messages.length - 1]?.timestamp?.toDate()\n  );\n\n  return !addNewChat ? (\n    <Link to={`/rooms/${id}`}>\n      <div className=\"sidebarChat\">\n        <div className=\"sidebarChat__avatar\">\n          <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n          <div className=\"sidebarChat__info\">\n            <h2>{name}</h2>\n            <p>{messages[0]?.message}</p>\n          </div>\n        </div>\n        <span className=\"sidebarChat__timestamp\">\n          {messages[0]?.message\n            ? formatDate(slotInDate, \"just time\")\n            : \"Offline\"}\n        </span>\n      </div>\n    </Link>\n  ) : (\n    <div onClick={createChat} className=\"sidebarChat\">\n      <h2>Add new chat</h2>\n    </div>\n  );\n}\n\nexport default SidebarChat;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { Chat, DonutLarge, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport SidebarChat from \"./SidebarChat\";\nimport db from \"../firebase\";\nimport \"./Sidebar.css\";\n\nfunction Sidebar() {\n  const [rooms, setRooms] = useState([]),\n    { user } = useSelector((state) => state.userReducer);\n\n  useEffect(() => {\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\n      setRooms(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      )\n    );\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar src={user?.photoURL} />\n        <div className=\"sidebar__headerRight\">\n          <IconButton>\n            <DonutLarge />\n          </IconButton>\n          <IconButton>\n            <Chat />\n          </IconButton>\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar__search\">\n        <div className=\"sidebar__searchContainer\">\n          <SearchOutlined />\n          <input type=\"text\" placeholder=\"Search or start new chat\" />\n        </div>\n      </div>\n      <div className=\"sidebar__chats\">\n        <SidebarChat addNewChat />\n        {rooms.map((room) => (\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import { useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport Login from \"./components/Login\";\nimport Sidebar from \"./components/Sidebar\";\n\nfunction App() {\n  const { user } = useSelector((state) => state.userReducer);\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  message: \"refree\",\n};\n\nconst messageReducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_MSG:\n      return {\n        ...state,\n        message: action.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;\n","import { actionTypes } from \"../actions/actionTypes\";\n\nexport const initialState = {\n  user: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport messageReducer from \"./messageReducer\";\nimport userReducer from \"./userReducer\";\n\nconst rootReducer = combineReducers({ userReducer, messageReducer });\n\n// export const initialState = {\n//   user: null,\n//   message: \"refree\",\n// };\n\n// export const actionTypes = {\n//   SET_USER: \"SET_USER\",\n// };\n\n// const rootReducer = (state = initialState, action) => {\n//   console.log(action);\n//   switch (action.type) {\n//     case actionTypes.SET_USER:\n//       console.log(action.user);\n//       return {\n//         ...state,\n//         user: action.user,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport \"./index.css\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nconsole.log(\"List of Reducers Stored in STATE 👉\", store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}